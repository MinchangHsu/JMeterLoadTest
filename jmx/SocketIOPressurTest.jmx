<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Socket IO Pressur Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Init Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">172.20.160.120</stringProp>
            <stringProp name="Argument.desc">socket io host</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">9099</stringProp>
            <stringProp name="Argument.desc">socket io port</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="path" elementType="Argument">
            <stringProp name="Argument.name">path</stringProp>
            <stringProp name="Argument.value">/socket.io/</stringProp>
            <stringProp name="Argument.desc">socket io path</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadCount" elementType="Argument">
            <stringProp name="Argument.name">threadCount</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadGroup" elementType="Argument">
            <stringProp name="Argument.name">threadGroup</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadGroupTimeout" elementType="Argument">
            <stringProp name="Argument.name">threadGroupTimeout</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="result" elementType="Argument">
            <stringProp name="Argument.name">result</stringProp>
            <stringProp name="Argument.value">true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="true">
        <stringProp name="TestPlan.comments">Task 模組群組</stringProp>
      </TestFragmentController>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers"/>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Open Connect" enabled="true">
          <stringProp name="TestPlan.comments">開啟ws連線</stringProp>
        </GenericController>
        <hashTree>
          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="First connect" enabled="true">
            <boolProp name="createNewConnection">true</boolProp>
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${host}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">${path}?EIO=3&amp;transport=websocket</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <boolProp name="binaryPayload">false</boolProp>
            <stringProp name="requestData"></stringProp>
            <stringProp name="readTimeout">6000</stringProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="log" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">var responseData = prev.getResponseDataAsString();
log.info(&quot;${__samplerName()}-----responseData=&quot; + responseData);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">handsharkData</stringProp>
              <stringProp name="RegexExtractor.regex">\{.*\}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sid</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">sid</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">sid is null</stringProp>
              <stringProp name="Sample.scope">variable</stringProp>
              <stringProp name="Scope.variable">handsharkData</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="WebSocket Ping/Pong" enabled="true">
          <stringProp name="TestPlan.comments">Health check</stringProp>
        </GenericController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="Send 2probe" enabled="true">
              <boolProp name="createNewConnection">false</boolProp>
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <boolProp name="binaryPayload">false</boolProp>
              <stringProp name="requestData">2probe</stringProp>
              <stringProp name="readTimeout">6000</stringProp>
              <boolProp name="loadDataFromFile">false</boolProp>
              <stringProp name="dataFile"></stringProp>
            </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="log" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">var responseData = prev.getResponseDataAsString();
log.info(&quot;${__threadNum()}--${__samplerName()}--respData=&quot; + responseData);</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="TestPlan.comments">延遲當前執行緒</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Send Message" enabled="true">
          <stringProp name="TestPlan.comments">發送訊息</stringProp>
        </GenericController>
        <hashTree>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Ready to send message" enabled="true">
            <stringProp name="TestPlan.comments">累計Thread 再一起發送訊息</stringProp>
            <stringProp name="groupSize">${threadGroup}</stringProp>
            <stringProp name="timeoutInMs">${threadGroupTimeout}</stringProp>
          </SyncTimer>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Send Message Event" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <boolProp name="binaryPayload">false</boolProp>
            <stringProp name="requestData">42[&quot;message&quot;, {&quot;message&quot;: &quot;Jmeter_Msg_${__time(,)}&quot;,&quot;userName&quot;: &quot;JmeterUserName_${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}&quot;}]</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="log" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">var responseData = prev.getResponseDataAsString();
log.info(&quot;${__samplerName()}-----responseData=&quot; + responseData);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Read Message" enabled="true">
          <stringProp name="TestPlan.comments">讀取訊息</stringProp>
        </GenericController>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${result}</stringProp>
            <stringProp name="TestPlan.comments">未讀到訊息的話
持續讀取訊息
直到有讀到訊息為止</stringProp>
          </WhileController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Wait to read message" enabled="true">
              <stringProp name="groupSize">${threadCount}</stringProp>
              <longProp name="timeoutInMs">0</longProp>
              <stringProp name="TestPlan.comments">等待所有執行緒
在同時執行讀取訊息程式</stringProp>
            </SyncTimer>
            <hashTree/>
            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="Read Message" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server"></stringProp>
              <stringProp name="port">80</stringProp>
              <stringProp name="path"></stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
              <stringProp name="dataType">Text</stringProp>
              <boolProp name="createNewConnection">false</boolProp>
              <stringProp name="readTimeout">30000</stringProp>
              <boolProp name="optional">false</boolProp>
            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">readMessage</stringProp>
                <stringProp name="RegexExtractor.regex">42</stringProp>
                <stringProp name="RegexExtractor.template">$0$</stringProp>
                <stringProp name="RegexExtractor.default">notMessage</stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">針對回傳進行正則判斷</stringProp>
              </RegexExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="is break while loop" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">var responseData = prev.getResponseDataAsString();
log.info(&quot;${__samplerName()}-----responseData=&quot; + responseData);
log.info(&quot;Msg &gt;&gt;&gt;&gt;&quot; + vars.get(&quot;readMessage&quot;) + &quot;&lt;&lt;&lt;&quot;);
var isNot_notMessageStr = String.valueOf(vars.get(&quot;readMessage&quot;)).equals(&quot;notMessage&quot;);
log.info(&quot;isNot_notMessageStr &gt;&gt;&gt;&gt;&quot; + isNot_notMessageStr + &quot;&lt;&lt;&lt;&quot;);
if(!isNot_notMessageStr){
	var bbb = Integer.parseInt(vars.get(&quot;readMessage&quot;)) == 42;
	log.info(&quot;bbb:&quot; + bbb);
	if(bbb){
		vars.put(&quot;result&quot;, &quot;false&quot;);
	}
}</stringProp>
                <stringProp name="TestPlan.comments">針對獨到的訊息做判斷
判斷為42的訊息才能算是真的讀到文字訊息</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="log" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">log.info(&quot;continue while loop ~~&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Disconnect" enabled="true">
          <stringProp name="TestPlan.comments">主動發起斷線通知</stringProp>
        </GenericController>
        <hashTree>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Ready to Close connect" enabled="true">
            <stringProp name="groupSize">${threadCount}</stringProp>
            <longProp name="timeoutInMs">0</longProp>
          </SyncTimer>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Send Disconect Message - 41" enabled="true">
            <stringProp name="TestPlan.comments">Disconnect</stringProp>
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <boolProp name="binaryPayload">false</boolProp>
            <stringProp name="requestData">41</stringProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="loadDataFromFile">false</boolProp>
            <stringProp name="dataFile"></stringProp>
          </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Socket IO 測試" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threadCount}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="First connect no sid Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1518778623">Socket IO Pressur Test</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
            <stringProp name="844381460">Open Connect</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Ping/Pong Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1518778623">Socket IO Pressur Test</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
            <stringProp name="-578580132">WebSocket Ping/Pong</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Send Message Controller" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1518778623">Socket IO Pressur Test</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
            <stringProp name="-1218031761">Send Message</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Read Message Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1518778623">Socket IO Pressur Test</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
            <stringProp name="1207561085">Read Message</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Disconnect Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1518778623">Socket IO Pressur Test</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
            <stringProp name="-1771096900">Disconnect</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
